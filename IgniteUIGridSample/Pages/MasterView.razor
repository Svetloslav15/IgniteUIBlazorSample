@page "/"
@using IgniteUIGridSample.Models;
@inject Northwind.IDataSourceService northwindService
@inject IJSRuntime JS

<div class="row-layout master-view-container">
    
    @if (employees.Count > 0 && countries.Count > 0)
    {
        <IgbGrid 
            Height="800px" 
            Data="employees" 
            PrimaryKey="EmployeeID" 
            DisplayDensity="DisplayDensity.Cosy" 
            class="ig-typography grid" 
            master-view-scope>
            <IgbColumn 
                HeaderTemplateScript="firstNameHeaderTemplate" 
                Field="EmployeeID" 
                DataType="GridColumnDataType.Number" 
                Header="employeeID"/>
            <IgbColumn 
                Field="FirstName" 
                DataType="GridColumnDataType.String" 
                Header="FirstName" />
            <IgbColumn Header="Country">
                <BodyTemplate> 
                    <IgbMultiColumnComboBox
                        DataSource="countries"
                        Fields="displayFields"
                        TextField="Name"
                        ValueChanged="HandleChange"
                        Placeholder="Choose a country" />
                </BodyTemplate>
            </IgbColumn>
            <IgbColumn 
                Field="AvatarUrl" 
                Header="Image" 
                BodyTemplate="ImageCellTemplate" 
                DataType="GridColumnDataType.Image" />
            <IgbColumn 
                Header="Department"
                BodyTemplate="DropDownTemplate" />
            <IgbColumn 
                BodyTemplate="TestTemplate" 
                Header="PopulatedValue"/>
        </IgbGrid>
    }
</div>

@code {
    private static List<Employee> employees = new List<Employee>();
    private static List<Country> countries = new List<Country>();
    private static string[] displayFields = new string[] { "Name", "Code" };
    private static List<string> departments = new List<string> { "Engineering", "Marketing", "HR"};
    private static string selectedValue = "";

    protected override async Task OnInitializedAsync()
    {
        employees = await this.northwindService.GetEmployees() ?? employees;
        countries = await this.northwindService.GetCountries() ?? countries;
    }

    public void HandleChange(object val)
    {
        selectedValue = val.ToString();
        StateHasChanged();
    }

    public RenderFragment<IgbCellTemplateContext> TestTemplate = (ctx) =>
    {
        return @<span>@selectedValue</span>;
     };

    public RenderFragment<IgbCellTemplateContext> ImageCellTemplate = (ctx) =>
    {
        return @<img src=@ctx.Cell.Value style="width: 36%;" />;
    };

    public RenderFragment<IgbCellTemplateContext> DropDownTemplate = (ctx) =>
    {
        var value = ctx.Cell.Value != null ? ctx.Cell.Value : "Department";

        return
            @<IgbDropdown Select=>
                <IgbButton slot="target">@value</IgbButton>
                @foreach (var department in departments)
                {
                    <IgbDropdownItem>@department</IgbDropdownItem>
                }
            </IgbDropdown>;
    };
};